//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dekhlo.Web.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    [MetadataType(typeof(CateogryMeta))]
    public partial class Cateogry
    {
    }

    public partial class CateogryMeta
    {
        //public Cateogry()
        //{
        //    this.PostCateogryMappings = new HashSet<PostCateogryMapping>();
        //    this.VisitorCateogries = new HashSet<VisitorCateogry>();
        //    this.Cateogry1 = new HashSet<Cateogry>();
        //}

        public long Id { get; set; }

        [Display(Name = "Cateogry Name")]
        [Required]
        public string CateogryName { get; set; }

        [Display(Name = "Visitor Cateogry")]
        public Nullable<bool> IsVisitorCateogry { get; set; }

        [Required]
        public Nullable<int> Status { get; set; }

        [Display(Name = "Created On")]
        public Nullable<System.DateTime> CreatedOn { get; set; }

        [Display(Name = "Created By")]
        public Nullable<long> CreatedBy { get; set; }

        [Display(Name = "Updated On")]
        public Nullable<System.DateTime> UpdatedOn { get; set; }

        [Display(Name = "Update By")]
        public Nullable<long> UpdateBy { get; set; }

        [Display(Name = "Parent Cateogry")]
        public Nullable<long> ParentCateogry { get; set; }


        [Display(Name = "Status Condition")]
        public virtual StatusCondition StatusCondition { get; set; }

        [Display(Name = "PostCateogry Mappings")]
        public virtual ICollection<PostCateogryMapping> PostCateogryMappings { get; set; }

        [Display(Name = "Visitor Cateogries")]
        public virtual ICollection<VisitorCateogry> VisitorCateogries { get; set; }

        [Display(Name = "Cateogry 1")]
        public virtual ICollection<Cateogry> Cateogry1 { get; set; }
        [Display(Name = "Cateogry 2")]

        public virtual Cateogry Cateogry2 { get; set; }
    }
}
